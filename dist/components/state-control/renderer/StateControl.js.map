{"version":3,"sources":["components/state-control/renderer/StateControl.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,UAHS,MAAM,CAGR,OAAO,CAAC,eAAK,OAAO,CAAC,SAAS,EAAE,0BAA0B,CAAC,CAAC,CAAC;;IAE/C,YAAY;YAAZ,YAAY;;AAC/B,WADmB,YAAY,CACnB,KAAK,EAAE;0BADA,YAAY;;uEAAZ,YAAY,aAEvB,KAAK;;AAEX,UAAK,KAAK,GAAG;AACX,iBAAW,EAAE,UAVF,WAAW,CAUG,QAAQ,CAAC,cAAc,CAAC;KAClD,CAAC;;AAEF,UAAK,iBAAiB,GAAG,MAAK,iBAAiB,CAAC,IAAI,OAAM,CAAC;AAC3D,UAAK,cAAc,GAAG,MAAK,cAAc,CAAC,IAAI,OAAM,CAAC;AACrD,cAfa,WAAW,CAeZ,EAAE,CAAC,iBAAiB,EAAE,MAAK,cAAc,CAAC,CAAC;;GACxD;;eAXkB,YAAY;;sCAab,KAAK,EAAE;AACvB,WAAK,CAAC,cAAc,EAAE,CAAC;AACvB,WAAK,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAE7B,UAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,EAAE;AACnC,kBAvBW,WAAW,CAuBV,IAAI,CAAC,WAAW,CAAC,CAAC;OAC/B,MACI;AACH,YAAI,CAAC,cAAc,CAAC,IAAI,EAAE,UA1Bf,WAAW,CA0BgB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;OAC/D;KACF;;;mCAEc,MAAM,EAAE,WAAW,EAAE;AAClC,UAAI,CAAC,QAAQ,CAAC;AACZ,mBAAW,EAAX,WAAW;OACZ,CAAC,CAAC;;AAEH,UAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,KAAK,CAAC;KACnC;;;6BAEQ;AACP,UAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,GAAG,WAAW,GAAG,YAAY,CAAC;AAChF,UAAM,MAAM,GAAG;;UAAQ,GAAG,EAAC,QAAQ,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB,AAAC;QAAE,UAAU;OAAU,CAAA;;AAE1F,UAAM,KAAK,GAAG;AACZ,cAAM,EAAE,MAAM;OACf,CAAC;;AAEF,aACE;;UAAK,KAAK,EAAE,KAAK,AAAC;QAChB;;;;UAAW,IAAI,CAAC,KAAK,CAAC,WAAW;SAAK;QACrC,MAAM;OACH,CACP;KACF;;;SA/CkB,YAAY;SANjB,SAAS;;kBAMJ,YAAY","file":"components/state-control/renderer/StateControl.js","sourcesContent":["import React, { Component } from 'react';\nimport { remote, ipcRenderer } from 'electron';\nimport path from 'path';\n\nremote.require(path.resolve(__dirname, '../browser/state-machine'));\n\nexport default class StateControl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      switchState: ipcRenderer.sendSync('switch-state')\n    };\n\n    this.changeSwitchState = this.changeSwitchState.bind(this);\n    this.setSwitchState = this.setSwitchState.bind(this);\n    ipcRenderer.on('switch-response', this.setSwitchState);\n  }\n\n  changeSwitchState(event) {\n    event.preventDefault();\n    event.target.disabled = true;\n\n    if (this.state.switchState == 'OFF') {\n      ipcRenderer.send('switch-on');\n    }\n    else {\n      this.setSwitchState(null, ipcRenderer.sendSync('switch-off'));\n    }\n  }\n\n  setSwitchState(sender, switchState) {\n    this.setState({\n      switchState\n    });\n\n    this.refs.button.disabled = false;\n  }\n\n  render() {\n    const buttonText = this.state.switchState == 'OFF' ? 'Switch ON' : 'Switch OFF';\n    const button = <button ref='button' onClick={this.changeSwitchState}>{buttonText}</button>\n\n    const style = {\n      height: '60px'\n    };\n\n    return (\n      <div style={style}>\n        <p>State: {this.state.switchState}</p>\n        {button}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":"/source/"}