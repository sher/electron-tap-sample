{"version":3,"sources":["components/state-control/renderer/StateControl.jsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,iBAAO,OAAP,CAAe,eAAK,OAAL,CAAa,SAAb,EAAwB,0BAAxB,CAAf;;IAEqB;;;AACnB,WADmB,YACnB,CAAY,KAAZ,EAAmB;0BADA,cACA;;uEADA,yBAEX,QADW;;AAGjB,UAAK,KAAL,GAAa;AACX,mBAAa,sBAAY,QAAZ,CAAqB,cAArB,CAAb;KADF,CAHiB;;AAOjB,UAAK,iBAAL,GAAyB,MAAK,iBAAL,CAAuB,IAAvB,OAAzB,CAPiB;AAQjB,UAAK,cAAL,GAAsB,MAAK,cAAL,CAAoB,IAApB,OAAtB,CARiB;AASjB,0BAAY,EAAZ,CAAe,iBAAf,EAAkC,MAAK,cAAL,CAAlC,CATiB;;GAAnB;;eADmB;;sCAaD,OAAO;AACvB,YAAM,cAAN,GADuB;AAEvB,YAAM,MAAN,CAAa,QAAb,GAAwB,IAAxB,CAFuB;;AAIvB,UAAI,KAAK,KAAL,CAAW,WAAX,IAA0B,KAA1B,EAAiC;AACnC,8BAAY,IAAZ,CAAiB,WAAjB,EADmC;OAArC,MAGK;AACH,aAAK,cAAL,CAAoB,IAApB,EAA0B,sBAAY,QAAZ,CAAqB,YAArB,CAA1B,EADG;OAHL;;;;mCAQa,QAAQ,aAAa;AAClC,WAAK,QAAL,CAAc;AACZ,gCADY;OAAd,EADkC;;AAKlC,WAAK,IAAL,CAAU,MAAV,CAAiB,QAAjB,GAA4B,KAA5B,CALkC;;;;6BAQ3B;AACP,UAAM,aAAa,KAAK,KAAL,CAAW,WAAX,IAA0B,KAA1B,GAAkC,WAAlC,GAAgD,YAAhD,CADZ;AAEP,UAAM,SAAS;;UAAQ,KAAI,QAAJ,EAAa,SAAS,KAAK,iBAAL,EAA9B;QAAuD,UAAvD;OAAT,CAFC;;AAIP,UAAM,QAAQ;AACZ,gBAAQ,MAAR;AACA,iBAAS,MAAT;OAFI,CAJC;;AASP,aACE;;UAAK,OAAO,KAAP,EAAL;QACE;;;;UAAW,KAAK,KAAL,CAAW,WAAX;SADb;QAEG,MAFH;OADF,CATO;;;;SAjCU","file":"components/state-control/renderer/StateControl.js","sourcesContent":["import React, { Component } from 'react';\nimport { remote, ipcRenderer } from 'electron';\nimport path from 'path';\n\nremote.require(path.resolve(__dirname, '../browser/state-machine'));\n\nexport default class StateControl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      switchState: ipcRenderer.sendSync('switch-state')\n    };\n\n    this.changeSwitchState = this.changeSwitchState.bind(this);\n    this.setSwitchState = this.setSwitchState.bind(this);\n    ipcRenderer.on('switch-response', this.setSwitchState);\n  }\n\n  changeSwitchState(event) {\n    event.preventDefault();\n    event.target.disabled = true;\n\n    if (this.state.switchState == 'OFF') {\n      ipcRenderer.send('switch-on');\n    }\n    else {\n      this.setSwitchState(null, ipcRenderer.sendSync('switch-off'));\n    }\n  }\n\n  setSwitchState(sender, switchState) {\n    this.setState({\n      switchState\n    });\n\n    this.refs.button.disabled = false;\n  }\n\n  render() {\n    const buttonText = this.state.switchState == 'OFF' ? 'Switch ON' : 'Switch OFF';\n    const button = <button ref='button' onClick={this.changeSwitchState}>{buttonText}</button>\n\n    const style = {\n      height: '60px',\n      padding: '10px'\n    };\n\n    return (\n      <div style={style}>\n        <p>State: {this.state.switchState}</p>\n        {button}\n      </div>\n    )\n  }\n}\n"],"sourceRoot":"/source/"}